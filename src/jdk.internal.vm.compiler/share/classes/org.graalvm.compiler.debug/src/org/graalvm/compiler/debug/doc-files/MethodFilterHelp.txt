Pattern for filtering debug scope output based on method context.
The syntax for a pattern is:

  SourcePatterns = SourcePattern ["," SourcePatterns] .
  SourcePattern = [ Class "." ] method [ "(" [ Parameter { ";" Parameter } ] ")" ] .
  Parameter = Class | "int" | "long" | "float" | "double" | "short" | "char" | "boolean" .
  Class = { package "." } class .
 
Glob pattern matching (*, ?) is allowed in all parts of the source pattern.

Examples of method filters:
--------- 
  visit(Argument;BlockScope)  
  
  Matches all methods named "visit", with the first parameter of
  type "Argument", and the second parameter of type "BlockScope".
  The packages of the parameter types are irrelevant.
---------
  arraycopy(Object;;;;)
 
  Matches all methods named "arraycopy", with the first parameter
  of type "Object", and four more parameters of any type. The
  packages of the parameter types are irrelevant.
---------    
  org.graalvm.compiler.core.graph.PostOrderNodeIterator.*
 
  Matches all methods in the class "org.graalvm.compiler.core.graph.PostOrderNodeIterator".
---------    
  *
 
  Matches all methods in all classes
---------
  org.graalvm.compiler.core.graph.*.visit
 
  Matches all methods named "visit" in classes in the package
  "org.graalvm.compiler.core.graph".
---------
  arraycopy,toString
 
  Matches all methods named "arraycopy" or "toString", meaning that ',' acts as an or operator.
